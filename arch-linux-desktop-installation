#!/bin/bash

# Installation script for i3 desktop environment.

# TODO: Check return values (https://google.github.io/styleguide/shellguide.html#s8.1-checking-return-values)!

if ! sudo true; then
  exit 1
fi

readonly COLOR_DARK_GRAY="#464646"
readonly COLOR_MEDIUM_GRAY="#6f6f6f"
readonly COLOR_PINK="#f92472"
readonly COLOR_GREEN="#a6e22c"
readonly COLOR_WHITE="#f7f7f7"

if whiptail --title "${TITLE}" --yesno "Enable logging?" "${DEFAULT_HEIGHT}" "${DEFAULT_WIDTH}" --defaultno 3>&1 1>&2 2>&3; then
  exec &> >(tee --append "${BASH_SOURCE[0]}.log")
fi

set -x

sudo sed --in-place "s/^#Color/Color/g" /etc/pacman.conf

curl --remote-name "https://download.sublimetext.com/sublimehq-pub.gpg"
sudo pacman-key --add sublimehq-pub.gpg
sudo pacman-key --lsign-key 8A8F901A
sudo tee --append /etc/pacman.conf <<- EOF

	[sublime-text]
	Server = https://download.sublimetext.com/arch/stable/x86_64
EOF
rm sublimehq-pub.gpg

sudo mkdir --parents /etc/pacman.d/hooks/
sudo tee /etc/pacman.d/hooks/20-slock.hook <<- EOF
	[Trigger]
	Type = Package
	Operation = Install
	Operation = Upgrade
	Target = slock

	[Action]
	When = PostTransaction
	Exec = /usr/bin/perl -i -p -e "s/#CC3333/${COLOR_MEDIUM_GRAY^^}/g;" -e "s/#005577/${COLOR_GREEN^^}/g;" /usr/bin/slock
EOF
sudo tee /etc/pacman.d/hooks/30-noto-fonts.hook <<- EOF
	[Trigger]
	Type = Package
	Operation = Install
	Operation = Upgrade
	Target = noto-fonts

	[Action]
	When = PostTransaction
	Exec = /usr/bin/find /usr/share/fonts/noto/ -type f ! -name NotoColorEmoji.ttf ! -name NotoSans-*.ttf ! -name NotoSansMono-*.ttf ! -name NotoSansSymbols-*.ttf ! -name NotoSansSymbols2-*.ttf ! -name NotoSerif-*.ttf -delete
EOF

readonly packages=(
  adobe-source-code-pro-fonts
  adobe-source-sans-pro-fonts
  adobe-source-serif-pro-fonts
  alacritty
  arc-gtk-theme
  arc-icon-theme
  bc
  bind
  dmenu
  dmidecode
  dunst
  feh
  firefox
  flatpak
  fwupd
  gimp
  git
  gnome-themes-extra # Arc theme dependency
  gpicview
  gtk-engine-murrine # Arc theme dependency
  gvfs
  gvfs-mtp
  gvfs-nfs
  gvfs-smb
  htop
  i3-wm
  i3status
  jq
  libnotify
  libreoffice-fresh
  lsof
  mkvtoolnix-cli
  mpv
  nmap
  noto-fonts
  noto-fonts-emoji
  numlockx
  p7zip
  pass
  pavucontrol
  pcmanfm
  pipewire
  pipewire-pulse
  polkit
  pwgen
  python
  python-virtualenv
  ripgrep
  rsync
  scrot
  slock
  sublime-text
  tcpdump
  testdisk
  thunderbird
  ttf-liberation
  unrar
  unzip
  wget
  wireplumber
  xclip
  xcursor-vanilla-dmz
  xdg-desktop-portal # Flatpak dependency
  xdg-desktop-portal-gtk # Flatpak dependency
  xorg-server
  xorg-xinit
  xorg-xrandr
  xorg-xsetroot
  xss-lock
  xterm
  zip
)
sudo pacman --noconfirm --sync --refresh "${packages[@]}"

sudo tee /usr/share/X11/xkb/symbols/default <<-EOF
	default partial alphanumeric_keys
	xkb_symbols "us" {
	    include "us(basic)"
	    include "level3(ralt_switch)"
	    key <AC01> {[ a, A, adiaeresis, Adiaeresis ]};
	    key <AC02> {[ s, S, ssharp ]};
	    key <AD03> {[ e, E, EuroSign ]};
	    key <AD07> {[ u, U, udiaeresis, Udiaeresis ]};
	    key <AD09> {[ o, O, odiaeresis, Odiaeresis ]};
	    include "default(arrow)"
	};

	partial alphanumeric_keys
	xkb_symbols "de" {
	    include "de(nodeadkeys)"
	    include "kpdl(dot)"
	    include "default(arrow)"
	};

	partial
	xkb_symbols "arrow" {
	    key <LEFT> {[ Left, Left, U2190 ]};
	    key <UP> {[ Up, Up, U2191 ]};
	    key <RGHT> {[ Right, Right, U2192 ]};
	    key <DOWN> {[ Down, Down, U2193 ]};
	};
EOF
if [[ "$(basename "$(awk --field-separator "=" '{ $1 == "KEYMAP"; print $2 }' /etc/vconsole.conf)" ".map")" == "us" ]]; then
  variants="us,de"
else
  variants="de,us"
fi
readonly variants
sudo tee /etc/X11/xorg.conf.d/10-keyboard.conf <<- EOF
	Section "InputClass"
	        Identifier "Keyboard configuration"
	        MatchIsKeyboard "on"
	        Option "XkbLayout" "default,default"
	        Option "XkbVariant" "${variants}"
	        Option "XkbOptions" "caps:escape_shifted_capslock,grp:win_space_toggle"
	EndSection
EOF
sudo tee /etc/X11/xorg.conf.d/90-default.conf <<- EOF
	Section "ServerFlags"
	        Option "DontVTSwitch"
	        Option "DontZap"
	EndSection

	Section "ServerLayout"
	        Identifier "Display control"
	        Option "StandbyTime" "0"
	        Option "SuspendTime" "0"
	        Option "OffTime" "10"
	        Option "BlankTime" "5"
	EndSection
EOF

sudo mkdir --parents /usr/share/icons/default/
sudo tee /usr/share/icons/default/index.theme <<- EOF
	[Icon Theme]
	Inherits=Vanilla-DMZ
EOF

sudo mkdir --parents /etc/gtk-2.0/
sudo tee /etc/gtk-2.0/gtkrc <<- EOF
	gtk-theme-name = "Arc-Lighter"
	gtk-icon-theme-name = "Arc"
	gtk-cursor-theme-name = "Vanilla-DMZ"
	gtk-font-name = "Source Sans 3 12"
	gtk-button-images = 1
	gtk-cursor-theme-size = 0
	gtk-enable-event-sounds = 1
	gtk-enable-input-feedback-sounds = 1
	gtk-menu-images = 1
	gtk-toolbar-icon-size = GTK_ICON_SIZE_LARGE_TOOLBAR
	gtk-toolbar-style = GTK_TOOLBAR_BOTH
	gtk-xft-antialias = 1
	gtk-xft-hinting = 1
	gtk-xft-hintstyle = "hintfull"
	gtk-xft-rgba = "rgb"
EOF

sudo mkdir --parents /etc/gtk-3.0/
sudo tee /etc/gtk-3.0/settings.ini <<- EOF
	[Settings]
	gtk-theme-name = Arc-Lighter
	gtk-icon-theme-name = Arc
	gtk-cursor-theme-name = Vanilla-DMZ
	gtk-font-name = Source Sans 3 12
	gtk-button-images = 1
	gtk-cursor-theme-size = 0
	gtk-decoration-layout = menu:
	gtk-enable-event-sounds = 1
	gtk-enable-input-feedback-sounds = 1
	gtk-menu-images = 1
	gtk-toolbar-icon-size = GTK_ICON_SIZE_LARGE_TOOLBAR
	gtk-toolbar-style = GTK_TOOLBAR_BOTH
	gtk-xft-antialias = 1
	gtk-xft-hinting = 1
	gtk-xft-hintstyle = hintfull
	gtk-xft-rgba = rgb
EOF

sudo mkdir --parents /etc/xdg/
sudo tee /etc/xdg/mimeapps.list <<- EOF
	[Default Applications]
	application/javascript=sublime_text.desktop
	application/json=sublime_text.desktop
	application/sql=sublime_text.desktop
	application/pdf=firefox.desktop
	application/xml=sublime_text.desktop
	application/x-shellscript=sublime_text.desktop
	image/bmp=gpicview.desktop
	image/gif=gpicview.desktop
	image/jpeg=gpicview.desktop
	image/png=gpicview.desktop
	image/tiff=gpicview.desktop
	image/svg+xml=gpicview.desktop
	text/css=sublime_text.desktop
	text/csv=sublime_text.desktop
	text/html=sublime_text.desktop
	text/markdown=sublime_text.desktop
	text/plain=sublime_text.desktop
	text/x-c=sublime_text.desktop
	text/x-c++=sublime_text.desktop
	text/x-java=sublime_text.desktop
EOF

mkdir --parents "${HOME}/.local/bin/"
mkdir --parents "${HOME}/.local/share/bash-completion/completions/"
tee "${HOME}/.local/bin/application-launcher" <<- EOF
	#!/bin/bash

	readonly CONFIGURATION_FILE="\${HOME}/.config/application-launcher/config"
	readonly BACKGROUND_COLOR="#6f6f6f"

	if [[ "\$#" -gt 0 ]]; then
	  case "\$1" in
	    -a | --add)
	      if [[ ! "\$2" =~ ^[a-z0-9\ -._]+\$ ]]; then
	        printf "Invalid application\n"
	        exit 1
	      fi
	      if [[ ! -f "\$3" || ! -x "\$3" ]]; then
	        printf "Invalid executable\n"
	        exit 1
	      fi
	      readonly temporary_file="\$(mktemp)"
	      awk --assign "application=\$2" --field-separator "=" '\$1 != application' "\${CONFIGURATION_FILE}" > "\${temporary_file}"
	      readonly executable="\$(realpath "\$(dirname "\$3")" | sed "s/^\/home\/\${USER}\//~\//g")/\$(basename "\$3")"
	      readonly args="\${*:4}"
	      if [[ -n "\${args}" ]]; then
	          printf "%s=%s %s\n" "\$2" "\${executable}" "\${args}" >> "\${temporary_file}"
	      else
	          printf "%s=%s\n" "\$2" "\${executable}" >> "\${temporary_file}"
	      fi
	      sort "\${temporary_file}" > "\${CONFIGURATION_FILE}"
	      rm "\${temporary_file}"
	      ;;
	    -r | --remove)
	      readonly temporary_file="\$(mktemp)"
	      awk --assign "application=\$2" --field-separator "=" '\$1 != application' "\${CONFIGURATION_FILE}" > "\${temporary_file}"
	      mv "\${temporary_file}" "\${CONFIGURATION_FILE}"
	      ;;
	    -l | --list)
	      column --table --separator "=" "\${CONFIGURATION_FILE}"
	      ;;
	    *)
	      printf "Usage: application-launcher [--add|--remove|--list] [APPLICATION] [EXECUTABLE] [ARGUMENTS...]\n"
	      exit 1
	      ;;
	  esac
	else
	  declare -A buffer
	  while IFS="=" read -r application executable; do
	    buffer+=(["\${application}"]="\${executable}")
	  done < "\${CONFIGURATION_FILE}"
	  while IFS="=" read -r application executable; do
	    buffer+=(["\${application}"]="\${executable}")
	  done < <(flatpak list --app | awk --field-separator "\t" '{ printf "%s=/usr/bin/flatpak run %s\n", tolower(\$1), \$2 }')
	  readonly buffer

	  readonly selection="\$(dmenu -i -sb "\${BACKGROUND_COLOR}" <<< "\$(printf "%s\n" "\${!buffer[@]}" | sort)")"
	  if [[ -n "\${selection}" ]]; then
	    i3-msg "exec --no-startup-id \${buffer[\${selection}]}"
	  fi
	fi
EOF
tee "${HOME}/.local/share/bash-completion/completions/application-launcher" <<-EOF
	function _application-launcher() {
	  if [[ "\${COMP_CWORD}" -eq 1 ]]; then
	    for option in \$(compgen -W "--add --remove --list" -- "\${COMP_WORDS[\${COMP_CWORD}]}"); do
	      COMPREPLY+=("\${option} ")
	    done
	  else
	    if [[ "\${COMP_WORDS[1]}" == "--add" ]]; then
	      if [[ "\${COMP_CWORD}" -eq 2 ]]; then
	        if [[ -n "\${COMP_WORDS[2]}" ]]; then
	          COMPREPLY=("\${COMP_WORDS[2]} ")
	        fi
	      elif [[ "\${COMP_CWORD}" -eq 3 ]]; then
	        for file in \$(compgen -f -- "\${COMP_WORDS[\${COMP_CWORD}]}"); do
	          if [[ -d "\${file}" ]]; then
	            COMPREPLY+=("\${file}/")
	          elif [[ -x "\${file}" ]]; then
	            COMPREPLY+=("\${file} ")
	          fi
	        done
	      else
	        if [[ -n "\${COMP_WORDS[\${COMP_CWORD}]}" ]]; then
	          COMPREPLY=("\${COMP_WORDS[\${COMP_CWORD}]} ")
	        fi
	      fi
	    elif [[ "\${COMP_WORDS[1]}" == "--remove" ]]; then
	      if [[ "\${COMP_CWORD}" -eq 2 ]]; then
	        for application in \$(compgen -W "\$(application-launcher --list | awk '{ print \$1 }')" -- "\${COMP_WORDS[\${COMP_CWORD}]}"); do
	          COMPREPLY+=("\${application} ")
	        done
	      fi
	    fi
	  fi
	}
	complete -o nospace -F _application-launcher application-launcher
EOF
chmod +x "${HOME}/.local/bin/application-launcher"

tee "${HOME}/.local/bin/display-configuration" <<- EOF
	#!/bin/bash

	while IFS= read -r screen; do
	  xrandr --output "\${screen}" --auto
	done < <(xrandr | awk '\$2 == "connected" { print \$1 }')

	if [[ -d "\${HOME}/.local/share/backgrounds" ]]; then
	  feh --bg-fill --no-fehbg --randomize "\${HOME}/.local/share/backgrounds"
	else
	  xsetroot -grey
	fi
EOF
tee "${HOME}/.local/share/bash-completion/completions/display-configuration" <<-EOF
	complete display-configuration
EOF
chmod +x "${HOME}/.local/bin/display-configuration"

tee "${HOME}/.local/bin/screenshot" <<- EOF
	#!/bin/bash

	FILENAME="%Y-%m-%d-%H-%M-%S.png"

	args=("--overwrite")
	while [[ "\$#" -gt 0 ]]; do
	  case "\$1" in
	    -s | --select)
	      args+=("--select")
	      shift
	      ;;
	    -c | --clipboard)
	      FILENAME="\$(mktemp --suffix=".png")"
	      trap "{ xclip -selection clipboard -target image/png -in \${FILENAME}; rm -rf \${FILENAME}; }" EXIT
	      shift
	      ;;
	    *)
	      printf "Usage: screenshot [-s|--select] [-c|--clipboard]"
	      exit 1
	  esac
	done
	readonly args

	scrot "\${args[@]}" "\${FILENAME}"
EOF
tee "${HOME}/.local/share/bash-completion/completions/screenshot" <<-EOF
	function _screenshot() {
	  readarray -t COMPREPLY < <(compgen -W "--clipboard --select" -- "\${COMP_WORDS[\${COMP_CWORD}]}")
	}
	complete -F _screenshot screenshot
EOF
chmod +x "${HOME}/.local/bin/screenshot"

mkdir --parents "${HOME}/.config/application-launcher/"
tee "${HOME}/.config/application-launcher/config" <<- EOF
	alacritty=/usr/bin/alacritty
	firefox=/usr/bin/firefox
	gimp=/usr/bin/gimp
	gpicview=/usr/bin/gpicview
	libreoffice=/usr/bin/libreoffice
	pavucontrol=/usr/bin/pavucontrol
	pcmanfm=/usr/bin/pcmanfm
	sublime-text=/usr/bin/subl -n
	thunderbird=/usr/bin/thunderbird
EOF

tee "${HOME}/.xinitrc" <<- EOF
	dbus-update-activation-environment --systemd DBUS_SESSION_BUS_ADDRESS DISPLAY XAUTHORITY
	xrdb -merge "\${HOME}/.Xresources"
	mkdir --parents "/run/user/\${UID}/i3/"
	mkdir --parents "/run/user/\${UID}/i3status/"
	awk 'NR!=1 && FNR==1 { printf "\n" } { print }' "\${HOME}/.config/i3.d/"* > "/run/user/\${UID}/i3/config"
	awk 'NR!=1 && FNR==1 { printf "\n" } { print }' "\${HOME}/.config/i3status.d/"* > "/run/user/\${UID}/i3status/config"
	exec /usr/bin/i3 -c "/run/user/\${UID}/i3/config"  > /dev/null 2>&1
EOF

tee "${HOME}/.Xauthority" <<- EOF
EOF

tee "${HOME}/.Xresources" <<- EOF
	Xft.dpi: 96
	XTerm.termName: xterm
	XTerm.title: Terminal
	XTerm.VT100.faceName: Source Code Pro
	XTerm.VT100.faceSize: 14
	XTerm.VT100.allowBoldFonts: false
	XTerm.VT100.background: rgb:28/28/28
	XTerm.VT100.foreground: rgb:f7/f7/f7
	XTerm.VT100.color0: rgb:6f/6f/6f
	XTerm.VT100.color1: rgb:f9/24/72
	XTerm.VT100.color2: rgb:a6/e2/2c
	XTerm.VT100.color3: rgb:e7/db/74
	XTerm.VT100.color4: rgb:67/d8/ef
	XTerm.VT100.color5: rgb:ac/80/ff
	XTerm.VT100.color6: rgb:2a/a1/98
	XTerm.VT100.color7: rgb:f7/f7/f7
	XTerm.VT100.color8: rgb:6f/6f/6f
	XTerm.VT100.color9: rgb:f9/24/72
	XTerm.VT100.color10: rgb:a6/e2/2c
	XTerm.VT100.color11: rgb:e7/db/74
	XTerm.VT100.color12: rgb:67/d8/ef
	XTerm.VT100.color13: rgb:ac/80/ff
	XTerm.VT100.color14: rgb:2a/a1/98
	XTerm.VT100.color15: rgb:f7/f7/f7
	XTerm.VT100.alternateScroll: true
	XTerm.VT100.fastScroll: true
	XTerm.VT100.jumpScroll: true
	XTerm.VT100.multiScroll: true
	XTerm.VT100.on2Clicks: regex (https?:)?[a-zA-Z0-9$%&/()?@~*+#,._-]+
	XTerm.VT100.on3Clicks: line
	XTerm.VT100.saveLines: 16384
	XTerm.VT100.translations: #override \n\\
	    Shift Ctrl <Key> c: copy-selection(CLIPBOARD) \n\\
	    Shift Ctrl <Key> v: insert-selection(CLIPBOARD)
EOF

mkdir --parents "${HOME}/.gnupg/"
tee "${HOME}/.gnupg/gpg-agent.conf" <<- EOF
	pinentry-program /usr/bin/pinentry-curses
EOF

tee "${HOME}/.bash_profile" <<- EOF
	umask g-rwx,o-rwx
	if [[ -n "\${BASH_VERSION}" && -f "\${HOME}/.bashrc" ]]; then
	    source "\${HOME}/.bashrc"
	fi
	if [[ -d "\${HOME}/.local/bin" ]]; then
	    PATH="\${HOME}/.local/bin:\${PATH}"
	fi
	if [[ -z "\${DISPLAY}" && "\${XDG_VTNR}" -eq 1 ]]; then
	    startx
	fi
EOF

tee "${HOME}/.bashrc" <<- EOF
	if [[ "\$-" == *i* ]]; then
	  if [[ -z "\${SSH_CLIENT:+substitution}" ]]; then
	    PS1="\[\e[32m\]\u@\h\[\e[m\]:\[\e[34m\]\w\[\e[m\]\\\$ "
	  else
	    PS1="\[\e[31m\]\u@\h\[\e[m\]:\[\e[34m\]\w\[\e[m\]\\\$ "
	  fi

	  export EDITOR="vim"
	  export PAGER="less"
	  export SYSTEMD_PAGER="cat"

	  alias sudo="sudo --preserve-env=EDITOR,PAGER,SYSTEMD_PAGER"

	  HISTCONTROL="ignoreboth"
	  HISTFILE="\${HOME}/.bash_history"
	  HISTFILESIZE="-1"
	  HISTSIZE="-1"
	  HISTTIMEFORMAT="%Y-%m-%d %H:%M:%S "

	  shopt -s autocd
	  shopt -s checkwinsize
	  shopt -s globstar
	  shopt -s histappend
	  tabs 4

	  eval "\$(dircolors -b)"

	  pgrep -u "\${USER}" ssh-agent > /dev/null
	  if [[ "\$?" -ne 0 ]]; then
	    ssh-agent -s > "\${HOME}/.sshrc"
	  fi
	  source "\${HOME}/.sshrc" > /dev/null

	  alias diff="/usr/bin/diff --color=auto"
	  alias grep="/usr/bin/grep --color=auto"
	  alias ip="/usr/bin/ip -color=auto"
	  alias less="/usr/bin/less --ignore-case"
	  alias ls="/usr/bin/ls --color=auto --group-directories-first"

	  alias bc="/usr/bin/bc --mathlib"
	  alias cal="/usr/bin/cal --months 9 --span"

	  for command in poweroff reboot suspend hibernate; do
	    alias "\${command}"="/usr/bin/systemctl \${command}"
	  done

	  function toogle_history() {
	    if [[ -z "\${HISTFILE:+substitution}" ]]; then
	      HISTFILE="\${HOME}/.bash_history"
	      printf "\e[30mHistory enabled\e[0m\n"
	    else
	      unset HISTFILE
	      printf "\e[30mHistory disabled\e[0m\n"
	    fi
	  }
	  bind -x '"\eh": toogle_history'

	  function prettify_git() {
	    args=("\$@")
	    case "\$1" in
	      log)
	        /usr/bin/git --no-pager log --reverse "\${args[@]:1}"
	        ;;
	      graph)
	        /usr/bin/git --no-pager log --color=always --graph "\${args[@]:1}" | less -r
	        ;;
	      *)
	        /usr/bin/git --no-pager "\${args[@]}"
	        ;;
	    esac
	  }
	  alias git="prettify_git"

	  if [[ -f "\${HOME}/.bash_aliases" ]]; then
	    source "\${HOME}/.bash_aliases"
	  fi

	  if [[ -d "\${HOME}/.bash_scripts/" ]]; then
	    while IFS= read -r file; do
	      alias "\$(basename "\${file}")"="\${file}"
	    done < <(find "\${HOME}/.bash_scripts/" -maxdepth 1 -type f -executable)
	  fi
	fi
EOF

tee "${HOME}/.bash_logout" <<- EOF
EOF

tee "${HOME}/.hushlogin" <<- EOF
EOF

mkdir --parents "${HOME}/.config/i3.d/"
tee "${HOME}/.config/i3.d/10-default" <<- EOF
	set \$mod Mod4
	floating_modifier \$mod

	font pango:Source Code Pro 10
	client.focused ${COLOR_DARK_GRAY} ${COLOR_DARK_GRAY} ${COLOR_WHITE} ${COLOR_MEDIUM_GRAY}
	client.focused_inactive ${COLOR_DARK_GRAY} ${COLOR_DARK_GRAY} ${COLOR_MEDIUM_GRAY} ${COLOR_WHITE}
	client.unfocused ${COLOR_DARK_GRAY} ${COLOR_DARK_GRAY} ${COLOR_MEDIUM_GRAY} ${COLOR_WHITE}
	client.urgent ${COLOR_DARK_GRAY} ${COLOR_PINK} ${COLOR_WHITE} ${COLOR_PINK}

	bindsym \$mod+Return exec --no-startup-id alacritty
	bindsym \$mod+Shift+q kill
	bindsym \$mod+d exec --no-startup-id application-launcher

	bindsym \$mod+Left focus left
	bindsym \$mod+Down focus down
	bindsym \$mod+Up focus up
	bindsym \$mod+Right focus right
	bindsym \$mod+Shift+Left move left
	bindsym \$mod+Shift+Down move down
	bindsym \$mod+Shift+Up move up
	bindsym \$mod+Shift+Right move right
	bindsym \$mod+Shift+n move workspace to output left
	bindsym \$mod+Shift+m move workspace to output right

	bindsym \$mod+h split h
	bindsym \$mod+v split v
	bindsym \$mod+f fullscreen
	bindsym \$mod+s layout stacking
	bindsym \$mod+w layout tabbed
	bindsym \$mod+e layout toggle split
	bindsym \$mod+Shift+space floating toggle
	bindsym \$mod+space focus mode_toggle
	bindsym \$mod+a focus parent
	bindsym \$mod+c focus child

	bindsym \$mod+1 workspace 1
	bindsym \$mod+2 workspace 2
	bindsym \$mod+3 workspace 3
	bindsym \$mod+4 workspace 4
	bindsym \$mod+5 workspace 5
	bindsym \$mod+6 workspace 6
	bindsym \$mod+7 workspace 7
	bindsym \$mod+8 workspace 8
	bindsym \$mod+9 workspace 9
	bindsym \$mod+0 workspace 10:X
	bindsym \$mod+F1 workspace 11:F1
	bindsym \$mod+F2 workspace 12:F2
	bindsym \$mod+F3 workspace 13:F3
	bindsym \$mod+F4 workspace 14:F4
	bindsym \$mod+F5 workspace 15:F5
	bindsym \$mod+F6 workspace 16:F6
	bindsym \$mod+F7 workspace 17:F7
	bindsym \$mod+F8 workspace 18:F8
	bindsym \$mod+F9 workspace 19:F9
	bindsym \$mod+F10 workspace 20:F10
	bindsym \$mod+F11 workspace 21:F11
	bindsym \$mod+F12 workspace 22:F12
	bindsym \$mod+Shift+1 move container to workspace 1
	bindsym \$mod+Shift+2 move container to workspace 2
	bindsym \$mod+Shift+3 move container to workspace 3
	bindsym \$mod+Shift+4 move container to workspace 4
	bindsym \$mod+Shift+5 move container to workspace 5
	bindsym \$mod+Shift+6 move container to workspace 6
	bindsym \$mod+Shift+7 move container to workspace 7
	bindsym \$mod+Shift+8 move container to workspace 8
	bindsym \$mod+Shift+9 move container to workspace 9
	bindsym \$mod+Shift+0 move container to workspace 10:X
	bindsym \$mod+Shift+F1 move container to workspace 11:F1
	bindsym \$mod+Shift+F2 move container to workspace 12:F2
	bindsym \$mod+Shift+F3 move container to workspace 13:F3
	bindsym \$mod+Shift+F4 move container to workspace 14:F4
	bindsym \$mod+Shift+F5 move container to workspace 15:F5
	bindsym \$mod+Shift+F6 move container to workspace 16:F6
	bindsym \$mod+Shift+F7 move container to workspace 17:F7
	bindsym \$mod+Shift+F8 move container to workspace 18:F8
	bindsym \$mod+Shift+F9 move container to workspace 19:F9
	bindsym \$mod+Shift+F10 move container to workspace 20:F10
	bindsym \$mod+Shift+F11 move container to workspace 21:F11
	bindsym \$mod+Shift+F12 move container to workspace 22:F12

	set \$exit i3 [e]xit [r]estart
	bindsym \$mod+Shift+e mode "\$exit"
	mode "\$exit" {
	    bindsym e exec i3-msg exit; mode default
	    bindsym r exec i3-msg restart; mode default
	    bindsym Escape mode default
	}

	set \$resize Resize
	bindsym \$mod+r mode "\$resize"
	mode "\$resize" {
	    bindsym Left resize shrink width 10 px or 10 ppt
	    bindsym Down resize grow height 10 px or 10 ppt
	    bindsym Up resize shrink height 10 px or 10 ppt
	    bindsym Right resize grow width 10 px or 10 ppt
	    bindsym Return mode default
	    bindsym Escape mode default
	}
EOF
tee "${HOME}/.config/i3.d/20-display" <<- EOF
	exec --no-startup-id display-configuration
	bindsym \$mod+Shift+d exec --no-startup-id display-configuration
EOF
tee "${HOME}/.config/i3.d/30-status" <<- EOF
	bar {
	    status_command i3status -c "/run/user/\${UID}/i3status/config"
	    position bottom
	    strip_workspace_numbers yes

	    colors {
	        background ${COLOR_DARK_GRAY}
	        statusline ${COLOR_WHITE}
	        separator ${COLOR_MEDIUM_GRAY}
	        focused_workspace ${COLOR_WHITE} ${COLOR_MEDIUM_GRAY} ${COLOR_WHITE}
	        active_workspace ${COLOR_WHITE} ${COLOR_MEDIUM_GRAY} ${COLOR_WHITE}
	        inactive_workspace ${COLOR_MEDIUM_GRAY} ${COLOR_DARK_GRAY} ${COLOR_WHITE}
	        urgent_workspace ${COLOR_MEDIUM_GRAY} ${COLOR_PINK} ${COLOR_WHITE}
	    }
	}
EOF
tee "${HOME}/.config/i3.d/40-volume" <<- EOF
	bindsym XF86AudioLowerVolume exec --no-startup-id wpctl set-volume @DEFAULT_AUDIO_SINK@ 1%-
	bindcode \$mod+59 exec --no-startup-id wpctl set-volume @DEFAULT_AUDIO_SINK@ 1%-
	bindcode \$mod+Shift+59 exec --no-startup-id wpctl set-volume @DEFAULT_AUDIO_SINK@ 10%-
	bindsym XF86AudioRaiseVolume exec --no-startup-id wpctl set-volume @DEFAULT_AUDIO_SINK@ 1%+
	bindcode \$mod+60 exec --no-startup-id wpctl set-volume @DEFAULT_AUDIO_SINK@ 1%+
	bindcode \$mod+Shift+60 exec --no-startup-id wpctl set-volume @DEFAULT_AUDIO_SINK@ 10%+
	bindsym XF86AudioMute exec --no-startup-id wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
	bindcode \$mod+61 exec --no-startup-id wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
EOF
tee "${HOME}/.config/i3.d/60-slock" <<- EOF
	exec --no-startup-id xss-lock slock
	bindsym --release \$mod+l exec --no-startup-id loginctl lock-session
EOF
tee "${HOME}/.config/i3.d/61-numlockx" <<- EOF
	exec --no-startup-id numlockx on
EOF
tee "${HOME}/.config/i3.d/62-screenshot" <<- EOF
	bindsym Print exec --no-startup-id screenshot
	bindsym --release Shift+Print exec --no-startup-id screenshot --select --clipboard
EOF
tee "${HOME}/.config/i3.d/63-dunst" <<- EOF
	exec --no-startup-id dunst
	bindsym \$mod+j exec --no-startup-id dunstctl history-pop
EOF

mkdir --parents "${HOME}/.config/i3status.d/"
tee "${HOME}/.config/i3status.d/10-default" <<- EOF
	general {
	    colors = true
	    color_good = "${COLOR_GREEN}"
	    color_degraded = "${COLOR_MEDIUM_GRAY}"
	    color_bad = "${COLOR_PINK}"
	    interval = 5
	}
EOF
tee "${HOME}/.config/i3status.d/20-volume" <<- EOF
	order += "volume pulse"
	volume pulse {
	    format = "🔊 %volume"
	    format_muted = "🔈"
	    device = "pulse"
	}
EOF
tee "${HOME}/.config/i3status.d/30-disk" <<- EOF
	order += "disk /"
	disk / {
	    format = "%free"
	}
EOF
readonly interface="$(ip -brief link show | awk '$2 == "UP" { print $1; exit }')"
if [[ "${interface}" == w* ]]; then
  tee "${HOME}/.config/i3status.d/60-wlan" <<- EOF
		order += "wireless ${interface}"
		wireless ${interface} {
		    format_up = "%essid"
		    format_down = "🖧"
		}
	EOF
else
  tee "${HOME}/.config/i3status.d/70-ethernet" <<- EOF
		order += "ethernet ${interface}"
		ethernet ${interface} {
		    format_up = "%ip"
		    format_down = "🖧"
		}
	EOF
fi
tee "${HOME}/.config/i3status.d/90-time" <<- EOF
	order += "tztime local"
	tztime local {
	    format = "%Y-%m-%d %H:%M"
	}
EOF

mkdir --parents "${HOME}/.config/dunst/"
tee "${HOME}/.config/dunst/dunstrc" <<- EOF
	[global]
	    geometry="300x1-10-35"
	    padding = 10
	    horizontal_padding = 10
	    frame_width = 1
	    font = "Source Code Pro 10"
	    line_height = 3
	    format = "<b>%s</b>\n%b"
	    word_wrap = true
	    hide_duplicate_count = true
	    show_indicators = false

	[urgency_low]
	    background = "${COLOR_DARK_GRAY}"
	    foreground = "${COLOR_WHITE}"
	    frame_color = "${COLOR_MEDIUM_GRAY}"
	    timeout = 3

	[urgency_normal]
	    background = "${COLOR_DARK_GRAY}"
	    foreground = "${COLOR_WHITE}"
	    frame_color = "${COLOR_MEDIUM_GRAY}"
	    timeout = 10

	[urgency_critical]
	    background = "${COLOR_DARK_GRAY}"
	    foreground = "${COLOR_WHITE}"
	    frame_color = "${COLOR_MEDIUM_GRAY}"
	    timeout = 0
EOF

mkdir --parents "${HOME}/.config/alacritty/"
tee "${HOME}/.config/alacritty/alacritty.yml" <<- EOF
	env:
	  TERM: xterm

	theme:
	  colors: &colors
	    black: &black "#6f6f6f"
	    red: &red "#f92472"
	    green: &green "#a6e22c"
	    yellow: &yellow "#e7db74"
	    blue: &blue "#67d8ef"
	    magenta: &magenta "#ac80ff"
	    cyan: &cyan "#2aa198"
	    white: &white "#f7f7f7"
	  foreground: &foreground "#f7f7f7"
	  background: &background "#282828"

	window:
	  title: Terminal
	  dynamic_title: true
	  class:
	    instance: Terminal
	    general: Auf zum Atem!
	  decorations: full
	  opacity: 1.0

	colors:
	  primary:
	    foreground: *foreground
	    background: *background
	  normal: *colors
	  bright: *colors
	  cursor:
	    text: *background
	    cursor: *foreground
	  selection:
	    text: *background
	    background: *foreground
	  search:
	    matches:
	      foreground: *background
	      background: *foreground
	    focused_match:
	      foreground: *foreground
	      background: *cyan
	  hints:
	    start:
	      foreground: *foreground
	      background: *red
	    end:
	      foreground: *red
	      background: *foreground
	  footer_bar:
	    foreground: *background
	    background: *foreground

	font:
	  normal:
	    family: Source Code Pro
	    style: Regular
	  bold:
	    style: Regular
	  italic:
	    style: Regular
	  bold_italic:
	    style: Regular
	  size: 16.0

	cursor:
	  style:
	    shape: Block
	    blinking: Always
	  blink_interval: 750
	  unfocused_hollow: true

	scrolling:
	  history: 16384
	  multiplier: 4

	mouse:
	  double_click:
	    threshold: 400
	  triple_click:
	    threshold: 400
	  hide_when_typing: false

	selection:
	  semantic_escape_chars: ",│\`|:\"' ()[]{}<>\t"
	  save_to_clipboard: false

	bell:
	  animation: Linear
	  duration: 0
	  color: *foreground

	shell:
	  program: /bin/bash
	  args: [ "--login" ]
	working_directory: None

	hints:
	  enabled:
	    - regex: "(https?://)[a-zA-Z0-9\$%&/()?@~*+#,._-]+"
	      action: Copy
	      post_processing: true
	      mouse:
	        enabled: true
	        mods: None
	      binding:
	        key: U
	        mods: Control|Shift

	live_config_reload: false
EOF

mkdir --parents "${HOME}/.config/pcmanfm/default/"
tee "${HOME}/.config/pcmanfm/default/pcmanfm.conf" <<- EOF
	[volume]
	autorun=0
	mount_on_startup=0
	mount_removable=0

	[ui]
	view_mode=compact
EOF
mkdir --parents "${HOME}/.config/libfm/"
tee "${HOME}/.config/libfm/libfm.conf" <<- EOF
	[config]
	terminal=alacritty

	[places]
	places_applications=0
	places_computer=0
	places_desktop=0
	places_home=1
	places_network=0
	places_root=1
	places_trash=1
	places_unmounted=1
EOF

mkdir --parents "${HOME}/.config/sublime-text/Packages/User/"
unzip -p "/opt/sublime_text/Packages/Color Scheme - Default.sublime-package" Monokai.sublime-color-scheme |
  sed -E "s/\"(name)\"(\s*):(\s*)\"Monokai\"/\"\1\"\2:\3\"Auf zum Atem\!\"/g" |
  sed -E "s/\"(author)\"(\s*):(\s*)\".*?\"/\"\1\"\2:\3\"Me\"/g" |
  sed -E "s/\"(black2)\"(\s*):(\s*)\"hsl\(.*?\)\"/\"\1\"\2:\3\"rgb(32, 32, 32)\"/g" |
  sed -E "s/\"(black3)\"(\s*):(\s*)\"hsl\(.*?\)\"/\"\1\"\2:\3\"rgb(40, 40, 40)\"/g" |
  sed -E "s/\"(grey)\"(\s*):(\s*)\"hsl\(.*?\)\"/\"\1\"\2:\3\"rgb(70, 70, 70)\"/g" |
  sed -E "s/\"(white)\"(\s*):(\s*)\"hsl\(.*?\)\"/\"\1\"\2:\3\"rgb(247, 247, 247)\"/g" |
  sed -E "s/\"(white2)\"(\s*):(\s*)\"hsl\(.*?\)\"/\"\1\"\2:\3\"rgb(248, 248, 248)\"/g" |
  sed -E "s/\"(white3)\"(\s*):(\s*)\"hsl\(.*?\)\"/\"\1\"\2:\3\"rgb(247, 247, 247)\"/g" |
  sed -E "s/\"(yellow3)\"(\s*):(\s*)\"hsl\(.*?\)\"/\"\1\"\2:\3\"rgb(206, 206, 206)\"/g" |
  sed -E "s/\"(yellow4)\"(\s*):(\s*)\"hsl\(.*?\)\"/\"\1\"\2:\3\"rgb(60, 60, 60)\"/g" |
  sed -E "s/\"(yellow5)\"(\s*):(\s*)\"hsl\(.*?\)\"/\"\1\"\2:\3\"rgb(111, 111, 111)\"/g" |
  tee "${HOME}/.config/sublime-text/Packages/User/Auf zum Atem"'!'".sublime-color-scheme"
tee "${HOME}/.config/sublime-text/Packages/User/Preferences.sublime-settings" <<- EOF
	{
	    "color_scheme": "Packages/User/Auf zum Atem!.sublime-color-scheme",
	    "draw_white_space": "all",
	    "ensure_newline_at_eof_on_save": true,
	    "fallback_encoding": "ISO 8859-1",
	    "font_face": "Source Code Pro",
	    "font_size": 14,
	    "highlight_line": true,
	    "highlight_modified_tabs": true,
	    "hot_exit": false,
	    "line_padding_bottom": 3,
	    "line_padding_top": 3,
	    "remember_workspace": false,
	    "scroll_speed": 0,
	    "show_encoding": true,
	    "show_line_endings": true,
	    "trim_trailing_white_space_on_save": true,
	    "update_check": false
	}
EOF
tee "${HOME}/.config/sublime-text/Packages/User/Default (Linux).sublime-keymap" <<- EOF
	[]
EOF
mkdir --parents "${HOME}/.config/sublime-text/Local/"
tee "${HOME}/.config/sublime-text/Local/Session.sublime_session" <<- EOF
	{"windows":[{"menu_visible":false}]}
EOF

chmod --recursive go= "${HOME}/"

if [[ "$(< /sys/devices/virtual/dmi/id/sys_vendor)" == "QEMU" ]]; then
  sudo pacman --noconfirm --sync --refresh spice-vdagent
  tee "${HOME}/.config/i3.d/21-spice" <<- EOF
		exec --no-startup-id spice-vdagent
	EOF
fi
